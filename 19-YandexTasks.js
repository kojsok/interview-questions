// ========================================== Задача 1
// Нужно реализовать банкомат с функционалом пополнения и выдачи

class ATM {
  vault = {
    5000: 0,
    2000: 0,
    1000: 0,
    500: 0, 
    100: 0,
    50: 0
  }
  
  deposit(bills) {
    // реализуй метод
  }
  
  whithdrow(amount) {
    // реализуй метод
  }
  
  // возвращает массив купюр который доступен на прием/выдачу
  get accept() {
    // реализуй геттер
  }
  
  // возвращает сколько всего денег во внутреннем хранилище
  get total() {
    // реализуй геттер
  }
  
  // возвращает касету с деньгами в виде объекта при инкассации
  get collect() {
    // реализуй геттер
  }
}

const atm = new ATM();
atm.accept; // [ 50, 100, 500, 1000, 2000, 5000 ]
atm.whithdrow(3500); // Error: Не могу выдать нужную сумму, недостаточно средств
atm.deposit([]); // Error: Положите деньги в купюроприемник
atm.deposit([5000, 1000, 5000, 500, 100, 50, 50]); // Внесено 11700
atm.deposit([500, 10, 5]); // Внесено 500, Заберите нераспознанные купюры [10, 5]
atm.whithdrow(3500); // Error: Не могу выдать нужную сумму, недостаточно купюр
atm.whithdrow(2100); // [1000, 500, 500, 100]
atm.whithdrow(0); // Error: Укажите корректную сумму
atm.total; //10100
atm.collect; // { '50': 2, '100': 0, '500': 0, '1000': 0, '2000': 0, '5000': 2 }
// ========================================== Задача 2

/**
 * Дан массив билетов:
   [
    { from: 'Astana', to: 'Bali' },
    { from: 'Moscow', to: 'Astana' },
    { from: 'Bali', to: 'SPb' },
   ]
 
   Нужно расположить их один за другим чтобы получился непрерывный маршрут:
  [
    { from: 'Moscow', to: 'Astana' },
    { from: 'Astana', to: 'Bali' },
    { from: 'Bali', to: 'SPb' }
  ]
 */
const getRoute = (tickets) => {
  // реализуй функцию getRoute
}

console.log(
  getRoute([
    { from: 'Astana', to: 'Bali' },
    { from: 'Moscow', to: 'Astana' },
    { from: 'Bali', to: 'SPb' },
  ])
);
/*
  [
    { from: 'Moscow', to: 'Astana' },
    { from: 'Astana', to: 'Bali' },
    { from: 'Bali', to: 'SPb' }
  ]
*/
// ========================================== Задача 3
function sum(a, b, c) { // Функция суммирования трех чисел
  return a + b + c;
}

// Написать функция каррирования для сложения чисел
function curry(fn) { 
 
}

console.log(curry(sum)(1, 2, 3));    // 6
console.log(curry(sum)(1, 2)(3));    // 6
console.log(curry(sum)(1)(2)(3));    // 6

Какие методы http запросов знаешь ?
Спросят с вероятностью 7%

HTTP (HyperText Transfer Protocol) поддерживает множество методов запросов, каждый из которых предназначен для выполнения определенных действий на сервере. Вот основные методы HTTP-запросов, которые широко используются:

1️⃣GET

Описание: Запрашивает данные с сервера.
Особенности: 
✅Не изменяет состояние сервера (идемпотентный).
✅Параметры запроса передаются в URL.
✅Кэшируется.
✅Можно сохранить в закладках браузера.
GET /api/users?id=123 HTTP/1.1
Host: www.example.com

2️⃣POST

Описание: Отправляет данные на сервер для создания ресурса или выполнения действия.
Особенности:
✅Изменяет состояние сервера.
✅Данные передаются в теле запроса.
✅Не кэшируется по умолчанию.
POST /api/users HTTP/1.1
Host: www.example.com
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.doe@example.com"
}

3️⃣PUT

Описание: Отправляет данные на сервер для создания или замены ресурса.
Особенности:
✅Идемпотентный.
✅Данные передаются в теле запроса.
PUT /api/users/123 HTTP/1.1
Host: www.example.com
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.doe@example.com"
}

4️⃣DELETE

Описание: Удаляет ресурс на сервере.
Особенности:
✅Идемпотентный.
DELETE /api/users/123 HTTP/1.1
Host: www.example.com

5️⃣PATCH

Описание: Частично обновляет ресурс на сервере.
Особенности:
✅Не является идемпотентным, хотя в некоторых случаях может быть.
✅Данные передаются в теле запроса.
PATCH /api/users/123 HTTP/1.1
Host: www.example.com
Content-Type: application/json

{
  "email": "new.email@example.com"
}

6️⃣HEAD

Описание: Запрашивает только заголовки ресурса, без тела.
Особенности:
✅Идемпотентный.
✅Используется для проверки наличия ресурса, размера, даты последнего изменения и т.д.
HEAD /api/users/123 HTTP/1.1
Host: www.example.com

7️⃣OPTIONS

Описание: Запрашивает поддерживаемые сервером методы для указанного ресурса.
Особенности:
✅Идемпотентный.
✅Используется для CORS-запросов, чтобы определить разрешенные методы и заголовки.
OPTIONS /api/users HTTP/1.1
Host: www.example.com

8️⃣CONNECT

Описание: Устанавливает туннель к серверу, обычно используется для прокси-серверов.
Особенности:
✅Не используется в обычных RESTful API.
CONNECT www.example.com:443 HTTP/1.1
Host: www.example.com

9️⃣TRACE

Описание: Выполняет запрос по пути до целевого ресурса, возвращая запрос в ответе.
Особенности:
✅Используется для диагностики или отладки.
TRACE /api/users HTTP/1.1
Host: www.example.com

Резюме

✅GET: Запрашивает данные, не изменяет состояние сервера.
✅POST: Отправляет данные для создания ресурса, изменяет состояние сервера.
✅PUT: Создает или заменяет ресурс, идемпотентный.
✅DELETE: Удаляет ресурс, идемпотентный.
✅PATCH: Частично обновляет ресурс.
✅HEAD: Запрашивает заголовки ресурса, без тела.
✅OPTIONS: Запрашивает поддерживаемые методы для ресурса.
✅CONNECT: Устанавливает туннель к серверу.
✅TRACE: Выполняет запрос по пути до целевого ресурса для диагностики.

Методы HTTP-запросов включают GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS, CONNECT и TRACE. Каждый метод используется для различных типов операций: получения данных, отправки данных, обновления, удаления и диагностики.
